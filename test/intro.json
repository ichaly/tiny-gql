{
  "data": {
    "__schema": {
      "types": [
        {
          "kind": "SCALAR",
          "name": "Int",
          "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent\nvalues between -(2^31) and 2^31 - 1.\n",
          "fields": null,
          "interfaces": null,
          "possibleTypes": null,
          "enumValues": null,
          "inputFields": null,
          "ofType": null
        },
        {
          "kind": "SCALAR",
          "name": "String",
          "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences.\nThe String type is most often used by GraphQL to represent free-form human-readable text.\n",
          "fields": null,
          "interfaces": null,
          "possibleTypes": null,
          "enumValues": null,
          "inputFields": null,
          "ofType": null
        },
        {
          "kind": "SCALAR",
          "name": "Cursor",
          "description": "A cursor is an encoded string use for pagination",
          "fields": null,
          "interfaces": null,
          "possibleTypes": null,
          "enumValues": null,
          "inputFields": null,
          "ofType": null
        },
        {
          "kind": "SCALAR",
          "name": "File",
          "description": "The `File` scalar type references to a multipart file, often used to upload files to the server. Expects a string with the form file field name",
          "fields": null,
          "interfaces": null,
          "possibleTypes": null,
          "enumValues": null,
          "inputFields": null,
          "ofType": null,
          "specifiedByUrl": "https://github.com/mjarkk/yarql#file-upload"
        },
        {
          "kind": "SCALAR",
          "name": "Time",
          "description": "The `Time` scalar type references to a ISO 8601 date+time, often used to insert and/or view dates. Expects a string with the ISO 8601 format",
          "fields": null,
          "interfaces": null,
          "possibleTypes": null,
          "enumValues": null,
          "inputFields": null,
          "ofType": null,
          "specifiedByUrl": "https://en.wikipedia.org/wiki/ISO_8601"
        },
        {
          "kind": "OBJECT",
          "name": "Users",
          "fields": [
            {
              "name": "Id",
              "args": [],
              "type": {
                "kind": "NON_NULL",
                "fields": null,
                "interfaces": null,
                "possibleTypes": null,
                "enumValues": null,
                "inputFields": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "fields": null,
                  "interfaces": null,
                  "possibleTypes": null,
                  "enumValues": null,
                  "inputFields": null,
                  "ofType": null
                }
              },
              "isDeprecated": false
            }
          ],
          "interfaces": [],
          "possibleTypes": null,
          "enumValues": null,
          "inputFields": null,
          "ofType": null
        },
        {
          "kind": "SCALAR",
          "name": "Boolean",
          "description": "The `Boolean` scalar type represents `true` or `false`",
          "fields": null,
          "interfaces": null,
          "possibleTypes": null,
          "enumValues": null,
          "inputFields": null,
          "ofType": null
        },
        {
          "kind": "SCALAR",
          "name": "Float",
          "description": "The `Float` scalar type represents signed double-precision fractional values as specified by\n[IEEE 754](http://en.wikipedia.org/wiki/IEEE_floating_point).",
          "fields": null,
          "interfaces": null,
          "possibleTypes": null,
          "enumValues": null,
          "inputFields": null,
          "ofType": null
        },
        {
          "kind": "ENUM",
          "name": "Direction",
          "description": "Result ordering types",
          "fields": null,
          "interfaces": null,
          "possibleTypes": null,
          "enumValues": [
            {
              "name": "asc",
              "description": "Ascending order",
              "isDeprecated": false
            },
            {
              "name": "desc",
              "description": "Descending order",
              "isDeprecated": false
            },
            {
              "name": "asc_nulls_first",
              "description": "Ascending nulls first order",
              "isDeprecated": false
            },
            {
              "name": "desc_nulls_first",
              "description": "Descending nulls first order",
              "isDeprecated": false
            },
            {
              "name": "asc_nulls_last",
              "description": "Ascending nulls last order",
              "isDeprecated": false
            },
            {
              "name": "desc_nulls_last",
              "description": "Descending nulls last order",
              "isDeprecated": false
            }
          ],
          "inputFields": null,
          "ofType": null
        },
        {
          "kind": "SCALAR",
          "name": "ID",
          "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache.\nThe ID type appears in a JSON response as a String; however, it is not intended to be human-readable.\nWhen expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted\nas an ID.\n",
          "fields": null,
          "interfaces": null,
          "possibleTypes": null,
          "enumValues": null,
          "inputFields": null,
          "ofType": null
        },
        {
          "kind": "SCALAR",
          "name": "JSON",
          "description": "The `JSON` scalar type represents json data",
          "fields": null,
          "interfaces": null,
          "possibleTypes": null,
          "enumValues": null,
          "inputFields": null,
          "ofType": null
        },
        {
          "kind": "OBJECT",
          "name": "Subscription",
          "fields": [
            {
              "name": "Users",
              "args": [],
              "type": {
                "name": "Users",
                "fields": null,
                "interfaces": null,
                "possibleTypes": null,
                "enumValues": null,
                "inputFields": null,
                "ofType": null
              },
              "isDeprecated": false
            }
          ],
          "interfaces": [],
          "possibleTypes": null,
          "enumValues": null,
          "inputFields": null,
          "ofType": null
        },
        {
          "kind": "ENUM",
          "name": "Recursion",
          "description": "Recursion relation types",
          "fields": null,
          "interfaces": null,
          "possibleTypes": null,
          "enumValues": [
            {
              "name": "children",
              "description": "Children of parent row",
              "isDeprecated": false
            },
            {
              "name": "parents",
              "description": "Parents of current row",
              "isDeprecated": false
            }
          ],
          "inputFields": null,
          "ofType": null
        },
        {
          "kind": "OBJECT",
          "name": "Query",
          "fields": [
            {
              "name": "Users",
              "args": [],
              "type": {
                "name": "Users",
                "fields": null,
                "interfaces": null,
                "possibleTypes": null,
                "enumValues": null,
                "inputFields": null,
                "ofType": null
              },
              "isDeprecated": false
            }
          ],
          "interfaces": [],
          "possibleTypes": null,
          "enumValues": null,
          "inputFields": null,
          "ofType": null
        }
      ],
      "directives": null,
      "queryType": {
        "name": "Query",
        "fields": null,
        "interfaces": null,
        "possibleTypes": null,
        "enumValues": null,
        "inputFields": null,
        "ofType": null
      }
    }
  }
}