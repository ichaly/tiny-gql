{
  "data": {
    "__schema": {
      "types": [
        {
          "kind": "SCALAR",
          "name": "Boolean",
          "description": "The `Boolean` scalar type represents `true` or `false`"
        },
        {
          "kind": "OBJECT",
          "name": "users",
          "fields": [
            {
              "name": "id",
              "args": [
              ],
              "type": {
                "kind": "NON_NULL",
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID"
                }
              },
              "isDeprecated": false
            }
          ],
          "inputFields": [],
          "interfaces": []
        },
        {
          "kind": "SCALAR",
          "name": "Int",
          "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent\nvalues between -(2^31) and 2^31 - 1.\n"
        },
        {
          "kind": "OBJECT",
          "name": "Query",
          "fields": [
            {
              "name": "users",
              "args": [
              ],
              "type": {
                "name": "users"
              },
              "isDeprecated": false
            }
          ],
          "interfaces": []
        },
        {
          "kind": "SCALAR",
          "name": "String",
          "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences.\nThe String type is most often used by GraphQL to represent free-form human-readable text.\n"
        },
        {
          "kind": "SCALAR",
          "name": "Float",
          "description": "The `Float` scalar type represents signed double-precision fractional values as specified by\n[IEEE 754](http://en.wikipedia.org/wiki/IEEE_floating_point)."
        },
        {
          "kind": "SCALAR",
          "name": "ID",
          "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache.\nThe ID type appears in a JSON response as a String; however, it is not intended to be human-readable.\nWhen expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted\nas an ID.\n"
        }
      ],
      "queryType": {
        "name": "Query"
      }
    }
  }
}
